{"version":3,"file":"static/js/595.0c071708.chunk.js","mappings":"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","sources":["FnF/Pages/Topics/CreateTopic.jsx"],"sourcesContent":["import { createRef, useEffect, useState, useCallback } from \"react\";\nimport CategoryList from \"../../components/Category\";\nimport Server from \"../../Server\";\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport React from \"react\";\nimport ArticleList from \"../../components/Articles\";\nimport Box from \"@mui/material/Box\"\nimport Collapse from \"@mui/material/Collapse\"\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport Footer from \"../../../Layout/Footer\";\nconst AddTopic = () => {\n    const [availableCountries, setAvailableCountries] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [selectedTopic, setSelectedTopic] = useState('folklore');\n    const [countryerror, setCountryError] = useState(false);\n    const [creating, setCreating] = useState(false);\n    const categoryListRef = createRef(null);\n    useEffect(() => {\n        Server.fetchCountries(selectedTopic).then(alreadyAvailableCountries => {\n            const allCountries = { ...Server.countries };\n            alreadyAvailableCountries.forEach(country => {\n                delete allCountries[country.id];\n            });\n            const result = Object.entries(allCountries).map(([id, name]) => ({ id, label: name }));\n            result.sort((a, b) => a.label.localeCompare(b.label));\n            setAvailableCountries(result);\n        })\n    }, [selectedTopic]);\n    const createTopic = useCallback(() => {\n        const categoryList = categoryListRef?.current;\n        if (!categoryList?.length)\n            return;\n        if (!selectedCountry) {\n            setCountryError(true);\n            return;\n        } else {\n            setCountryError(false);\n        }\n        setCreating(true);\n        Server.createTopic({\n            country : selectedCountry,\n            title : selectedTopic,\n            categories : categoryList\n        }).then(topic => {\n            const url = new URL( `/fnf/topic/edit`, window.location.origin);\n            url.searchParams.append('id', topic.id);\n            window.location.href = url;\n        }).finally(() => {\n            setCreating(false);\n        })\n    }, [categoryListRef]);\n    return <Card>\n        <CardHeader title=\"Add Topic\" action={ <Button variant=\"contained\" color=\"primary\" onClick={createTopic}>Create</Button>} />\n        <CardContent>\n            <Box>\n                <FormControl size=\"small\" sx={{\n                    minWidth: 250,\n                    m: 1\n                }} disabled={creating} >\n                    <InputLabel id=\"topic\">Topic</InputLabel>\n                    <Select\n                        labelId=\"topic\"\n                        id=\"topic\"\n                        value={selectedTopic}\n                        onChange={e => setSelectedTopic(e.target.value)}\n                        label=\"Topic\"\n                    >\n                        <MenuItem value=\"folklore\">Folklore</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl size=\"small\" sx={{\n                    minWidth: 250,\n                    m: 1\n                }} disabled={creating}>\n                    <InputLabel id=\"country\">Country</InputLabel>\n                    <Select\n                        labelId=\"country\"\n                        id=\"country\"\n                        error={countryerror}\n                        value={selectedCountry}\n                        onChange={e => setSelectedCountry(e.target.value)}\n                        label=\"Country\"\n                    >\n                        {availableCountries.map(country => <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Box>\n            <CategoryList categoryListRef={categoryListRef} disabled={creating} />\n            <Footer />\n        </CardContent>\n    </Card>\n}\nexport default AddTopic"],"names":["_useState","useState","_useState2","_slicedToArray","availableCountries","setAvailableCountries","_useState3","_useState4","selectedCountry","setSelectedCountry","_useState5","_useState6","selectedTopic","setSelectedTopic","_useState7","_useState8","countryerror","setCountryError","_useState9","_useState10","creating","setCreating","categoryListRef","createRef","useEffect","Server","fetchCountries","then","alreadyAvailableCountries","allCountries","_objectSpread","countries","forEach","country","id","result","Object","entries","map","_ref","_ref2","label","sort","a","b","localeCompare","createTopic","useCallback","categoryList","current","length","title","categories","topic","url","URL","window","location","origin","searchParams","append","href","finally","_jsxs","Card","children","_jsx","CardHeader","action","Button","variant","color","onClick","CardContent","Box","FormControl","size","sx","minWidth","m","disabled","InputLabel","Select","labelId","value","onChange","e","target","MenuItem","error","CategoryList","Footer"],"sourceRoot":""}