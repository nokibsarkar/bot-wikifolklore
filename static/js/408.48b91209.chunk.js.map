{"version":3,"file":"static/js/408.48b91209.chunk.js","mappings":"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","sources":["FnF/Pages/User/EditUser.jsx"],"sourcesContent":["\nimport LinearProgress from '@mui/material/LinearProgress';\nimport WaterfallChartIcon from '@mui/icons-material/WaterfallChart';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport { useCallback, useMemo, useState, forwardRef } from \"react\";\nimport AutoComplete from '@mui/material/Autocomplete';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Box from '@mui/material/Box';\nimport Server from \"../../Server.ts\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CheckBox from '@mui/material/Checkbox';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MuiAlert from '@mui/material/Alert';\nimport { Typography } from '@mui/material';\nimport Footer from '../../../Layout/Footer.jsx';\nconst Alert = forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={1} ref={ref} variant=\"filled\" {...props} />;\n});\nconst EditUser = ({ user: currentUser }) => {\n    const [user, setUser] = useState(null);\n    const [rights, setRights] = useState(user?.rights || 0);\n    const [refreshKey, setRefreshKey] = useState(0);\n    const [saved, setSaved] = useState(false);\n    const id = new URLSearchParams(window.location.search).get('id');\n    useState(() => {\n        if (!id)\n            return;\n        Server.getUser(id).then(u => {\n            setUser(u);\n            setRights(u.rights);\n        })\n    }, [id, refreshKey])\n    const save = useCallback(() => {\n        Server.updateUser({ id, rights }).then((user) => {\n            setUser(user);\n            setRights(user.rights);\n            setSaved(true);\n            setTimeout(() => setSaved(false), 2000);\n        })\n    }, [id, rights])\n    if (!user)\n        return <LinearProgress />\n    if (Server.hasAccess(currentUser.rights, Server.RIGHTS.GRANT) === false)\n        return <h1>Access Denied</h1>;\n\n    return (\n        <Box>\n            <Card>\n                <CardHeader title={user.username} action={\n                    <Button variant=\"contained\" onClick={save}>\n                        Save\n                    </Button>\n                } />\n                <CardContent>\n                    <Typography variant=\"h6\" component=\"div\">\n                        Rights\n                    </Typography>\n                    <Divider />\n                    <List>\n                        <ListItem>\n                            <ListItemText primary=\"Task Rights\" />\n                            <CheckBox sx={{ cursor: 'pointer' }} disabled checked={Server.hasAccess(rights, Server.RIGHTS.TASK)} /* onClick={() => setRights(Server.toggleAccess(rights, Server.RIGHTS.TASK))}*/ />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText primary=\"Topic Rights\" />\n                            <CheckBox sx={{ cursor: 'pointer' }} checked={Server.hasAccess(rights, Server.RIGHTS.TOPIC)} onClick={() => setRights(Server.toggleAccess(rights, Server.RIGHTS.TOPIC))} />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText primary=\"Stats Rights\" />\n                            <CheckBox sx={{ cursor: 'pointer' }} checked={Server.hasAccess(rights, Server.RIGHTS.STATS)} onClick={() => setRights(Server.toggleAccess(rights, Server.RIGHTS.STATS))} />\n                        </ListItem>\n\n                        <ListItem>\n                            <ListItemText primary=\"Grant Rights\" />\n                            <CheckBox sx={{ cursor: 'pointer' }} checked={Server.hasAccess(rights, Server.RIGHTS.GRANT)} onClick={() => setRights(Server.toggleAccess(rights, Server.RIGHTS.GRANT))} />\n                        </ListItem>\n                    </List>\n                    <Snackbar open={saved} autoHideDuration={6000} anchorOrigin={{vertical : 'bottom', horizontal : 'center'}}>\n                        <Alert severity=\"success\" sx={{ width: '100%' }}>\n                            Saved Successfully\n                        </Alert>\n                    </Snackbar>\n                    <Footer />\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}\nexport default EditUser"],"names":["Alert","forwardRef","props","ref","_jsx","MuiAlert","_objectSpread","elevation","variant","_ref","currentUser","user","_useState","useState","_useState2","_slicedToArray","setUser","_useState3","rights","_useState4","setRights","_useState5","_useState6","refreshKey","_useState7","_useState8","saved","setSaved","id","URLSearchParams","window","location","search","get","Server","getUser","then","u","save","useCallback","updateUser","setTimeout","hasAccess","RIGHTS","GRANT","children","Box","_jsxs","Card","CardHeader","title","username","action","Button","onClick","CardContent","Typography","component","Divider","List","ListItem","ListItemText","primary","CheckBox","sx","cursor","disabled","checked","TASK","TOPIC","toggleAccess","STATS","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","width","Footer","LinearProgress"],"sourceRoot":""}